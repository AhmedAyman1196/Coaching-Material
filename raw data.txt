http://codeforces.com/problemset/problem/236/A
hint : you only need to keep track of every character,  use a boolean array to keep track whether a character is found or not 
solution link :http://codeforces.com/contest/236/submission/33829251

11988	Broken Keyboard (a.k.a. Beiju Text)
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=3139
hint :  think of a data structure that allow insertion from both sides
https://ideone.com/tuKwEl
dequeue , can be solved with linked list

10264 - The Most Potent Corner
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1205
https://ideone.com/QTrOoD
bitmask

10703 - Free spots
https://github.com/fernandohbc/MyPCS/blob/master/uvaonlinejudge/src/volume_cvii/P10703_FreeSpots.java
https://uva.onlinejudge.org/index.php?option=onlinejudge&page=show_problem&problem=1644
use 2D boolean array of size 500 × 500)

541 - Error Correction
https://uva.onlinejudge.org/index.php?option=onlinejudge&page=show_problem&problem=482
https://github.com/izharishaksa/UVa-Solution/blob/master/src/datastructures/builtin/Problem541YES.java
count the number of ‘1’s for each row/col; all of them must be even; if ∃ an error, check if it is on the same row and col)

514 - Rails
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=455
https://ideone.com/qetrPf
use stack to simulate the process


ONP - Transform the Expression
https://ideone.com/urywUI
http://www.spoj.com/problems/ONP/
think of using a stack

11933	Splitting Numbers
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=9
https://ideone.com/VcuwoQ
basic bit manipulation , could be solved with Strings + binary decimal conversion

10935 - Throwing cards away I
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1876
https://ideone.com/RbaMDN
simulate using a queue

414 - Machined Surfaces
https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=355
https://ideone.com/VK956q
use a 1D array to count the number of 'X's in each row + keep track of their max , answer = sum(max-count[i]) for every row

